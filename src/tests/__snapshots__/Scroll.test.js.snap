// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expect Scroll to render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Scroll>
    <h1>
        Mock child
    </h1>
</Scroll>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <h1>
        Mock child
</h1>,
      "style": Object {
        "border": "5px solid black",
        "height": "790px",
        "overflowY": "scroll",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "mockElement",
      "nodeType": "host",
      "props": Object {
        "children": "Mock child",
      },
      "ref": null,
      "rendered": "Mock child",
      "type": "h1",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h1>
          Mock child
</h1>,
        "style": Object {
          "border": "5px solid black",
          "height": "790px",
          "overflowY": "scroll",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "mockElement",
        "nodeType": "host",
        "props": Object {
          "children": "Mock child",
        },
        "ref": null,
        "rendered": "Mock child",
        "type": "h1",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
